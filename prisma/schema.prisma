generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String
  firstName         String?
  lastName          String?
  ssn               String?
  dob               String?
  address           String?
  plan              String?
  city              String?
  state             String?
  zip               String?
  phone             String?
  consentGiven      Boolean?
  createdAt         DateTime  @default(now())
  emailVerified     DateTime?
  verificationToken String?
  currentStep       Int       @default(1)

  // Array integration
  arrayUserId       String?   @unique

  // dispute cadence tracking
  lastDisputeSentAt DateTime?
  nextDisputeAt     DateTime?
  sentWithSable     Boolean?  @default(false)

  // popup display tracking
  popupOneLastSeen  DateTime?
  popupTwoLastSeen  DateTime?

  loans    CreditBuilderLoan[] @relation("UserLoans")
  disputes Dispute[]
}

model CreditBuilderLoan {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  openedAt      DateTime @default(now())
  lastOpenedAt  DateTime?
  status        String?  @default("opened_widget")

  user User @relation("UserLoans", fields: [userId], references: [id])
}


model Dispute {
  id          Int      @id @default(autoincrement())
  userId      Int
  bureau      String
  accountName String
  occurredAt  DateTime
  reason      String
  letterBody  String   @default("")

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Lead {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}
